let exp_cfg = [
    [1, 0],
    [2, 70],
    [3, 150],
    [4, 240],
    [5, 340],
    [6, 460],
    [7, 590],
    [8, 730],
    [9, 890],
    [10, 1060],
    [11, 1260],
    [12, 1480],
    [13, 1720],
    [14, 1990],
    [15, 2280],
    [16, 2610],
    [17, 2970],
    [18, 3370],
    [19, 3800],
    [20, 4270],
    [21, 4770],
    [22, 5310],
    [23, 5880],
    [24, 6490],
    [25, 7140],
    [26, 7830],
    [27, 8570],
    [28, 9350],
    [29, 10170],
    [30, 11040],
    [31, 11950],
    [32, 12950],
    [33, 14030],
    [34, 15200],
    [35, 16460],
    [36, 17800],
    [37, 19270],
    [38, 20870],
    [39, 22600],
    [40, 24460],
    [41, 26450],
    [42, 28570],
    [43, 30820],
    [44, 33200],
    [45, 35610],
    [46, 38040],
    [47, 40490],
    [48, 42960],
    [49, 45470],
    [50, 48030],
    [51, 50630],
    [52, 53250],
    [53, 55890],
    [54, 58560],
    [55, 61250],
    [56, 63960],
    [57, 66710],
    [58, 69510],
    [59, 72350],
    [60, 75230],
    [61, 78130],
    [62, 81060],
    [63, 84010],
    [64, 86980],
    [65, 89970],
    [66, 93000],
    [67, 96080],
    [68, 99200],
    [69, 102360],
    [70, 105550],
    [71, 108760],
    [72, 111990],
    [73, 115240],
    [74, 118510],
    [75, 121830],
    [76, 125190],
    [77, 128590],
    [78, 132040],
    [79, 135510],
    [80, 139000],
    [81, 142510],
    [82, 146040],
    [83, 149590],
    [84, 153170],
    [85, 156770],
    [86, 160410],
    [87, 164090],
    [88, 167820],
    [89, 171570],
    [90, 175340],
    [91, 179130],
    [92, 182940],
    [93, 186780],
    [94, 190640],
    [95, 194520],
    [96, 198440],
    [97, 202410],
    [98, 206420],
    [99, 210450],
    [100, 214500],
    [101, 218570],
    [102, 222670],
    [103, 226810],
    [104, 230990],
    [105, 235220],
    [106, 239490],
    [107, 243780],
    [108, 248090],
    [109, 252420],
    [110, 256780],
    [111, 261180],
    [112, 265620],
    [113, 270110],
    [114, 274640],
    [115, 279190],
    [116, 283760],
    [117, 288350],
    [118, 292970],
    [119, 297630],
    [120, 302330]
];

let max_level = 120;

/**
 * 累积经验对应的等级
 */
export function totalExp2Level(totalExp: number) {
    for (let i = exp_cfg.length - 1; i >= 0; i--) {
        let levelInfo = exp_cfg[i];
        if (totalExp > levelInfo[1]) {
            return levelInfo[0];
        }
    }
    return 1;
}

/**
 * 获取等级对应的经验
 */
export function getLevelNeedExp(level: number) {
    level = level || 1;
    level = Math.min(level, max_level)
    return exp_cfg[level - 1][1];
}


/**
 * 获取完成当前等级需要的经验
 */
export function getCmpLevelNeedExp(level: number) {
    level = level || 1;
    if (level === max_level) {
        return 0;
    }
    let nextLevel = Math.min(level + 1, max_level)
    return exp_cfg[nextLevel - 1][1] - exp_cfg[level - 1][1];
}

/**
 * 获取当前等级剩余经验
 */
export function getLevelRemainingExp(totalExp: number) {
    let level = totalExp2Level(totalExp);
    let remainingExp = totalExp - exp_cfg[level - 1][1];
    return remainingExp;
}

/**
 * 获取当前经验等级进度
 */
export function getLevelProgress(totalExp: number) {
    let level = totalExp2Level(totalExp);
    let needExp = getCmpLevelNeedExp(level);
    let remainingExp = getLevelRemainingExp(totalExp);
    return remainingExp / needExp;
}

